{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Divergence/Divergence.vue?d4ca","webpack:///./vue.config.js","webpack:///./src/Divergence/Divergence.vue?7062","webpack:///src/Divergence/Divergence.vue","webpack:///./src/Divergence/Divergence.vue?7f59","webpack:///./src/Divergence/Divergence.vue","webpack:///./src/Divergence/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","publicPath","pages","index","entry","title","introduction","divergence","curl","circulation","greentheorem","generalisedgreentheorem","stoketheorem","render","_vm","this","_h","$createElement","_c","_self","attrs","pageName","vue_config","scopedSlots","_u","fn","_v","staticClass","on","changeSlider","proxy","staticStyle","staticRenderFns","component","Vue","config","productionTip","use","ImpVis","ImpVisKatex","h","$mount"],"mappings":"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","file":"js/divergence.a1ec77d5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"divergence\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"divergence\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0c4639\":\"4790a3d3\",\"chunk-76e94462\":\"30e7b526\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-76e94462\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0c4639\":\"31d6cfe0\",\"chunk-76e94462\":\"0616178c\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([3,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Divergence.vue?vue&type=style&index=0&lang=css&\"","module.exports = {\n    publicPath:'./',\n    pages:{\n        index:{\n            entry:'src/main.js',\n            title:'Index'\n        },\n            introduction:{\n                entry:'src/Introduction/main.js',\n                title:'Introduction',\n                \n            },\n            divergence:{\n                entry:'src/Divergence/main.js',\n                title:'Divergence',\n                \n            },\n            curl:{\n                entry:'src/Curl/main.js',\n                title:'Curl',\n                \n            },\n            circulation:{\n                entry:'src/Circulation/main.js',\n                title:'Circulation',\n                \n            },\n            greentheorem:{\n                entry:'src/GreenTheorem/main.js',\n                title:'GreenTheorem',\n                \n            },\n            generalisedgreentheorem:{\n                entry:'src/GeneralisedGreenTheorem/main.js',\n                title:'GeneralisedGreenTheorem',\n                \n            },\n            stoketheorem:{\n                entry:'src/StokeTheorem/main.js',\n                title:'StokeTheorem',\n                \n            },\n    }\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('iv-visualisation',{attrs:{\"title\":_vm.pageName,\"vue_config\":_vm.vue_config,\"page_number\":2},scopedSlots:_vm._u([{key:\"hotspots\",fn:function(){return [_c('iv-pane',{attrs:{\"position\":\"left\",\"format\":\"full\"}},[_c('iv-sidebar-content',{attrs:{\"showPagination\":true}},[_c('iv-sidebar-section',{attrs:{\"title\":\"Divergence\",\"icon\":\"book-open\"}},[_vm._v(\" The divergence of a vector field \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"\\\\mathbf{A}\"}}),_vm._v(\" is: \"),_c('br'),_c('div',{staticClass:\"center\"},[_c('iv-equation-box',{attrs:{\"equation\":\"\\\\text{divergence} \\\\mathbf{A} = \\\\nabla \\\\cdot \\\\mathbf{A}\"}})],1),_vm._v(\" It describes the strength of the source or sink for a given point. \"),_c('br'),_c('br'),_vm._v(\" The Divergence Theorem states that the divergence of a vector field inside a region is equal to the flux of the vector field flowing through the region. Suppose \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"V\"}}),_vm._v(\" is the volume bounded by region \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"S\"}}),_vm._v(\". If \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"\\\\mathbf{A}\"}}),_vm._v(\" is a continuously differentiable vector field defined on a neighborhood of \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"v\"}}),_vm._v(\", we have: \"),_c('br'),_c('div',{staticClass:\"center\"},[_c('iv-equation-box',{attrs:{\"equation\":\"\\\\iiint_V (\\\\nabla \\\\cdot \\\\mathbf{A}) \\\\,dV = \\\\oiint_S (\\\\mathbf{A} \\\\cdot \\\\mathbf{\\\\hat{n}}) \\\\,dS\"}})],1),_vm._v(\" Where \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"\\\\mathbf{\\\\hat{n}}\"}}),_vm._v(\" is the out pointing normal of the surface element \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"S\"}}),_vm._v(\". \"),_c('br'),_c('br'),_vm._v(\" A simple demonstration is shown in the animation on the right hand side. \"),_c('br'),_c('br'),_vm._v(\" Each unit volume element \"),_c('iv-equation-box',{staticClass:\"in-line-eqn\",attrs:{\"stylise\":false,\"equation\":\"dV\"}}),_vm._v(\" can be considered as a small cube containing a source, with flux coming out on each side of the cube. When placing two neighbouring volume elements together, the flux flowing through the adjacent sides will cancel each other. Hence the overall outcome of piling up all the volume elements will be the flux coming out of the entire surface. \"),_c('br'),_c('br'),_vm._v(\" Since the volume elements are small enough to be considered as a point source, this total flux is therefore equal to the vector sum of the total strength of each source, which is the total divergence. \")],1),_c('iv-sidebar-section',{attrs:{\"title\":\"Instructions\",\"theme\":\"Lime\"}},[_vm._v(\" The initial graph shows an object sitting in a vector field with flux coming out from each side. \"),_c('br'),_c('br'),_vm._v(\" Click on the \\\"Play\\\" button to start the animation. \"),_c('br'),_c('br'),_vm._v(\" Pause the animation at Frame 20; the initial object has been sliced into small volume elements, with each of them having flux coming out from each side. \"),_c('br'),_c('br'),_vm._v(\" Continue playing. The process will be reversed. By adding a small volume element that contains a source each time, the flux flowing through the adjacent sides of two neighbour elements will cancel each other. Keep playing you will see the overall outcome of piling up all the volume elements will be the flux coming out of the entire surface. \"),_c('br'),_c('br'),_vm._v(\" The slider controls the frames of the animation, you can play with it to see each frame. \"),_c('br'),_c('br'),_vm._v(\" You can zoom in the graph by turning your mouse wheel, and you can also view the graph from different viewpoints by click on the graph and rotate it with your mouse. \")])],1)],1),_c('iv-fixed-hotspot',{attrs:{\"position\":\"bottom\",\"transparent\":\"\"}},[_c('iv-slider',{attrs:{\"id\":\"frameSlider\",\"name\":\"Frame #\",\"min\":0,\"max\":176,\"step\":1,\"tick_step\":20,\"init_val\":0,\"playButton\":true,\"time_step\":10},on:{\"sliderChanged\":_vm.changeSlider}})],1)]},proxy:true}])},[_c('div',{staticClass:\"center\",staticStyle:{\"padding-top\":\"50px\"}},[_c('div',{staticStyle:{\"width\":\"450px\",\"height\":\"450px\"},attrs:{\"id\":\"graph\"}})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <iv-visualisation :title=\"pageName\" :vue_config=\"vue_config\" :page_number=\"2\">\r\n            <template #hotspots>\r\n                <iv-pane position=\"left\" format=\"full\">\r\n                    <iv-sidebar-content :showPagination=\"true\">\r\n                        <iv-sidebar-section title=\"Divergence\" icon=\"book-open\">\r\n                            The divergence of a vector field <iv-equation-box class=\"in-line-eqn\" :stylise=\"false\" equation=\"\\mathbf{A}\" /> is: <br>\r\n                            <div class=\"center\">\r\n                                <iv-equation-box equation=\"\\text{divergence} \\mathbf{A} = \\nabla \\cdot \\mathbf{A}\" />\r\n                            </div>\r\n\r\n                            It describes the strength of the source or sink for a given point. <br><br>\r\n\r\n                            The Divergence Theorem states that the divergence of a vector field inside a region is equal to the flux of the vector field flowing through the region. Suppose <iv-equation-box class=\"in-line-eqn\" :stylise=\"false\" equation=\"V\" /> is the volume bounded by region <iv-equation-box class=\"in-line-eqn\" :stylise=\"false\" equation=\"S\" />. If <iv-equation-box class=\"in-line-eqn\" :stylise=\"false\" equation=\"\\mathbf{A}\" /> is a continuously differentiable vector field defined on a neighborhood of <iv-equation-box class=\"in-line-eqn\" :stylise=\"false\" equation=\"v\" />, we have: <br>\r\n                            <div class=\"center\">\r\n                                <iv-equation-box equation=\"\\iiint_V (\\nabla \\cdot \\mathbf{A}) \\,dV = \\oiint_S (\\mathbf{A} \\cdot \\mathbf{\\hat{n}}) \\,dS\" />\r\n                            </div>\r\n                            Where <iv-equation-box :stylise=\"false\" class=\"in-line-eqn\" equation=\"\\mathbf{\\hat{n}}\" /> is the out pointing normal of the surface element <iv-equation-box :stylise=\"false\" class=\"in-line-eqn\" equation=\"S\" />. <br><br>\r\n\r\n                            A simple demonstration is shown in the animation on the right hand side. <br><br>\r\n                            \r\n                            Each unit volume element <iv-equation-box class=\"in-line-eqn\" :stylise=\"false\" equation=\"dV\" /> can be considered as a small cube containing a source, with flux coming out on each side of the cube. When placing two neighbouring volume elements together, the flux flowing through the adjacent sides will cancel each other. Hence the overall outcome of piling up all the volume elements will be the flux coming out of the entire surface. <br><br>\r\n                            \r\n                            Since the volume elements are small enough to be considered as a point source, this total flux is therefore equal to the vector sum of the total strength of each source, which is the total divergence.\r\n                            \r\n                        </iv-sidebar-section>\r\n\r\n                        <iv-sidebar-section title=\"Instructions\" theme=\"Lime\">\r\n                            The initial graph shows an object sitting in a vector field with flux coming out from each side. <br><br>\r\n\r\n                            Click on the \"Play\" button to start the animation. <br><br>\r\n\r\n                            Pause the animation at Frame 20; the initial object has been sliced into small volume elements, with each of them having flux coming out from each side. <br><br>\r\n\r\n                            Continue playing. The process will be reversed. By adding a small volume element that contains a source each time, the flux flowing through the adjacent sides of two neighbour elements will cancel each other. Keep playing you will see the overall outcome of piling up all the volume elements will be the flux coming out of the entire surface. <br><br>\r\n\r\n                            The slider controls the frames of the animation, you can play with it to see each frame. <br><br>\r\n\r\n                            You can zoom in the graph by turning your mouse wheel, and you can also view the graph from different viewpoints by click on the graph and rotate it with your mouse.\r\n                            \r\n                        </iv-sidebar-section>\r\n                    </iv-sidebar-content>\r\n                </iv-pane>\r\n\r\n                <iv-fixed-hotspot position=\"bottom\" transparent>\r\n                    <iv-slider id=\"frameSlider\" name=\"Frame #\" :min=\"0\" :max=\"176\" :step=\"1\" :tick_step=\"20\" :init_val=\"0\" :playButton=\"true\" :time_step=\"10\" @sliderChanged=\"changeSlider\" />\r\n                </iv-fixed-hotspot>\r\n            </template>\r\n\r\n            <!-- Graph -->\r\n            <div class=\"center\" style=\"padding-top: 50px;\">\r\n                <div id=\"graph\" style=\"width:450px; height:450px;\"></div>\r\n            </div>\r\n        </iv-visualisation>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vue_config from '../../vue.config.js'\r\nimport Plotly from 'plotly.js-dist'\r\nimport $ from 'jquery';\r\nimport * as math from 'mathjs';\r\nimport numeric from 'numeric';\r\n// import MathJax from 'mathjax'\r\n\r\nexport default {\r\n    name: \"divergence\",\r\n    data() {\r\n        return {\r\n            pageName:\"Divergence\",\r\n            vue_config,\r\n            isPaused: false,\r\n            frameNo: 0,\r\n            redrawPlot: false,\r\n        };\r\n    },\r\n    methods: {\r\n        changeSlider(e) {\r\n            this.frameNo = e;\r\n        }\r\n    },\r\n    watch: {\r\n        frameNo: function() {\r\n            this.redrawPlot = true;\r\n        }\r\n    },\r\n    mounted() {\r\n        let v = this;\r\n        // MathJax.typeset();\r\n\r\n        let animationFrames;\r\n        let animationIndex, animationLimit;\r\n        let duration = 50;\r\n        let isPaused = v.isPaused;\r\n        let stops;\r\n        let playID, sliderID;\r\n\r\n        /**\r\n         * initialises the animation frames.\r\n         * @param {string} playButtonID - Play button ID.\r\n         * @param {object} allFrames - The frames needed to animate.\r\n         * @param {list} extra - list of objects with inanimated plots.\r\n         * @param {object} layout - layout for the animation.\r\n         * @param {float} setDuration - frame transition duration (ms).\r\n         * @param {list} stopValues - stopping points (limit: upto 2 stops can be introduced)\r\n         */\r\n        function initAnimation(\r\n            playButtonID,\r\n            allFrames,\r\n            extra = [],\r\n            layoutIn = {},\r\n            setDuration = 50,\r\n            stopValues = [0, 0]\r\n        ) {\r\n            Plotly.purge(\"graph\");\r\n            playID = playButtonID;\r\n            sliderID = \"#\" + playID.slice() + \"Slider\";\r\n            duration = setDuration;\r\n            animationFrames = allFrames;\r\n            animationLimit = animationFrames.length;\r\n            stops = stopValues;\r\n            isPaused = true;\r\n            animationIndex = 0;\r\n            let dataIn = [];\r\n            for (let i = 0, n = animationFrames[0].data.length; i < n; ++i) {\r\n                dataIn.push({\r\n                    type: animationFrames[0].data.type,\r\n                });\r\n            }\r\n            for (let i = 0, n = extra.length; i < n; ++i) {\r\n                dataIn.push(extra[i]);\r\n            }\r\n            Plotly.newPlot(\"graph\", dataIn, (layout = layoutIn));\r\n            reset();\r\n        }\r\n\r\n        /** resets animation. */\r\n        function reset() {\r\n            isPaused = true;\r\n            animationIndex = 0;\r\n            historyPlot(animationIndex);\r\n            // document.getElementById(playID).value = isPaused ? \"Play\" : \"Pause\";\r\n            // v.buttonState = 0;\r\n            updateSlider();\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * plots index-th frame\r\n         * @param {int} index - index of the frame\r\n         */\r\n        function historyPlot(index) {\r\n            // console.log(\"historyPlot\");\r\n            animationIndex = index;\r\n            let data = [];\r\n            for (let i = 0, n = animationFrames[index].data.length; i < n; ++i) {\r\n                data.push(animationFrames[index].data[i]);\r\n            }\r\n            Plotly.animate(\r\n                \"graph\",\r\n                { data: data },\r\n                {\r\n                    fromcurrent: true,\r\n                    transition: { duration: 0 },\r\n                    frame: { duration: 0, redraw: true },\r\n                }\r\n            );\r\n            isPaused = true;\r\n            // document.getElementById(playID).value = isPaused ? \"Play\" : \"Pause\";\r\n            // v.buttonState = 0;\r\n            return;\r\n        }\r\n\r\n        /** Updates animation. */\r\n        function update() {\r\n            animationIndex++;\r\n            if (animationIndex === animationLimit) {\r\n                isPaused = true;\r\n                // document.getElementById(playID).value = \"Reset\";\r\n                // v.buttonState = 3;\r\n                return;\r\n            }\r\n            if (!isPaused) {\r\n                let data = [];\r\n                for (let i = 0, n = animationFrames[1].data.length; i < n; ++i) {\r\n                    data.push(animationFrames[animationIndex].data[i]);\r\n                }\r\n                Plotly.animate(\r\n                    \"graph\",\r\n                    { data: data },\r\n                    {\r\n                        fromcurrent: true,\r\n                        transition: { duration: duration },\r\n                        frame: { duration: duration, redraw: true },\r\n                        mode: \"next\",\r\n                    }\r\n                );\r\n                pauseComp(duration + 5);\r\n                requestAnimationFrame(update);\r\n                updateSlider();\r\n                //Add stopping functionality here!!!\r\n                if (\r\n                    animationIndex === stops[0] ||\r\n                    animationIndex === stops[1] ||\r\n                    animationIndex === stops[2] ||\r\n                    animationIndex === stops[3] ||\r\n                    animationIndex === stops[4] ||\r\n                    animationIndex === stops[5] ||\r\n                    animationIndex === stops[6] ||\r\n                    animationIndex === stops[7]\r\n                ) {\r\n                    isPaused = !isPaused;\r\n                    // document.getElementById(playID).value = \"Continue\";\r\n                    // v.buttonState = 2;\r\n                    animationIndex--;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * pauses the computation.\r\n         * @param {float} - time duration to pause the computation. (ms)\r\n         */\r\n        function pauseComp(ms) {\r\n            ms += new Date().getTime();\r\n            while (new Date() < ms);\r\n            return;\r\n        }\r\n\r\n        /** updates linked frame slider value and position. */\r\n        function updateSlider() {\r\n            // console.log(\"updating slider\");\r\n            $(sliderID).val(animationIndex);\r\n            v.frameNo = animationIndex;\r\n            $(sliderID + \"Display\").text(animationIndex);\r\n        }\r\n\r\n        /** Starts the animation. */\r\n        function startAnimation() {\r\n            if (animationIndex < animationLimit) {\r\n                isPaused = !isPaused;\r\n                // if (isPaused) {\r\n                //     v.buttonState = 1;\r\n                // } else {\r\n                //     v.buttonState = 0;\r\n                // }\r\n                requestAnimationFrame(update);\r\n            } else {\r\n                reset();\r\n            }\r\n            return;\r\n        }\r\n\r\n        let magenta = \"#FF00FF\",\r\n            // blue = \"#0000FF\",\r\n            green = \"#008000\",\r\n            impBlue = \"#003E74\",\r\n            black = \"rgb(0,0,0)\",\r\n            white = \"rgb(255,255,255)\",\r\n            // cyan = \"rgb(0,146,146)\", //1\r\n            lilac = \"rgb(182,109,255)\", //2\r\n            orange = \"rgb(219,209,0)\", //3\r\n            red = \"rgb(160, 0, 0)\";\r\n            // realOrange = \"rgb(227,104, 0)\";\r\n\r\n        // Plot Utilities:\r\n        /**\r\n         * sets camera options in layout.\r\n         * @param {array} point - point of viewpoint.\r\n         */\r\n        function createView(point) {\r\n            let norm = Math.sqrt(point[0]*point[0] + (5*point[1])*(5*point[1]) + point[2]*point[2]);\r\n            let a = 0.5 + point[0]/norm, b = 1 +  5*point[1]/norm, c = 0.5 + point[2]/norm;\r\n            let camera = {\r\n                up: {x: 0, y: 0, z: 1},\r\n                eye: {x: -a, y: -b, z: c + 0.5},\r\n                center: {x: 0, y: 0, z: -0.2}\r\n            }\r\n            return camera;\r\n        }\r\n        /**\r\n         * Creates Axes Object.\r\n         * @param {float} length - length of the half axes.\r\n         */\r\n        // function createAxes(length) {\r\n        //     let axes = [];\r\n        //     let vector = [0, length];\r\n        //     let initialVec;\r\n        //     let vecString = [\"x\", \"y\", \"z\"];\r\n        //     let originString = [\"\", \"\", \"(0,0,0)\"];\r\n        //     for (let i = 0; i < 3; ++i) {\r\n        //         initialVec = [[0, 0], [0, 0], [0, 0]];\r\n        //         initialVec[i] = vector;\r\n        //         axes.push(\r\n        //             {\r\n        //                 type: \"scatter3d\",\r\n        //                 mode: \"lines+text\",\r\n        //                 x: initialVec[0],\r\n        //                 y: initialVec[1],\r\n        //                 z: initialVec[2],\r\n        //                 line: {color: \"rgb(0,0,0)\", width: 4},\r\n        //                 text: [originString[i], vecString[i]],\r\n        //                 textfont: {size: 15},\r\n        //                 textposition: \"top\"\r\n        //             }\r\n        //         );\r\n        //     }\r\n        //     return axes;\r\n        // }\r\n\r\n        // Change of Basis:\r\n        /**\r\n         * changes spherical to cartesian coordinates\r\n         * @param {float} r - r.\r\n         * @param {float} theta - theta.\r\n         * @param {float} phi - phi.\r\n         */\r\n        function sp2c(r,theta,phi) {\r\n            return [\r\n                r * Math.sin(theta) * Math.cos(phi),\r\n                r * Math.sin(theta) * Math.sin(phi),\r\n                r * Math.cos(theta)\r\n            ];\r\n        }\r\n        /**\r\n         * changes cartesian to spherical coordinates\r\n         * @param {float} x - x.\r\n         * @param {float} y - y.\r\n         * @param {float} z - z.\r\n         */\r\n        function c2sp(x,y,z) {\r\n            let r = 0, theta = 0, phi = 0;\r\n            if (x*x + y*y + z*z !== 0) {\r\n                r = Math.sqrt(x*x + y*y + z*z);\r\n                theta = Math.acos(z/r);\r\n                phi = Math.atan2(y,x);\r\n            }\r\n            return [r, theta, phi];\r\n        }\r\n        /**\r\n         * changes polar to cartesian coordinates\r\n         * @param {float} rho - rho.\r\n         * @param {float} phi - phi.\r\n         */\r\n        // function p2c(rho, phi) {\r\n        //     return [\r\n        //         rho * Math.cos(phi),\r\n        //         rho * Math.sin(phi)\r\n        //     ];\r\n        // }\r\n        /**\r\n         * changes cartesian to polar coordinates\r\n         * @param {float} x - x.\r\n         * @param {float} y - y.\r\n         */\r\n        // function c2p(x,y) {\r\n        //     let rho = 0, phi = 0;\r\n        //     if (x*x + y*y !== 0) {\r\n        //         rho = Math.sqrt(x*x + y*y);\r\n        //         phi = Math.atan2(y,x);\r\n        //     }\r\n        //     return [rho, phi];\r\n        // }\r\n\r\n\r\n        ///Shape Objects:\r\n        //3D Objects:\r\n        /**\r\n         * Represents a line.\r\n         * @constructor\r\n         * @param {list} points - list of the points in the line.\r\n         */\r\n        function Line(points) {\r\n            this.x = [];\r\n            this.y = [];\r\n            this.z = [];\r\n            for (let i = 0; i  < points.length; ++i) {\r\n                this.x.push(points[i][0]);\r\n                this.y.push(points[i][1]);\r\n                this.z.push(points[i][2]);\r\n            }\r\n\r\n            this.gObject = function(color, width=7, dash=\"solid\") {\r\n                let lineObject = {\r\n                    type: \"scatter3d\",\r\n                    mode: \"lines\",\r\n                    x: this.x,\r\n                    y: this.y,\r\n                    z: this.z,\r\n                    line: {color: color, width: width, dash:dash}\r\n                }\r\n                return lineObject;\r\n            }\r\n\r\n            this.arrowHead = function(color, width=7, wingLen=0.1, dash=\"solid\") {\r\n                let lastElm = this.x.length - 1;\r\n                let [r, theta, phi] = c2sp(this.x[lastElm]-this.x[0], this.y[lastElm]-this.y[0], this.z[lastElm]-this.z[0]);\r\n                let offset = [this.x[0], this.y[0], this.z[0]];\r\n                let frac = wingLen*r;\r\n                let sin45 = Math.sin(Math.PI/4);\r\n                let d = r - frac * sin45;\r\n                let wingLength = Math.sqrt(Math.pow(frac*sin45,2) + d*d);\r\n                let wingAngle = Math.acos(d/wingLength);\r\n\r\n\r\n                let wings_xyz = [\r\n                    math.add(sp2c(wingLength, theta + wingAngle, phi), offset),\r\n                    math.add(sp2c(wingLength, theta - wingAngle, phi), offset)\r\n                ];\r\n\r\n                let wings = {\r\n                    type: \"scatter3d\",\r\n                    mode: \"lines\",\r\n                    x: [wings_xyz[0][0], this.x[lastElm], wings_xyz[1][0]],\r\n                    y: [wings_xyz[0][1], this.y[lastElm], wings_xyz[1][1]],\r\n                    z: [wings_xyz[0][2], this.z[lastElm], wings_xyz[1][2]],\r\n                    line: {color: color, width: width, dash: dash}\r\n                }\r\n\r\n                return wings;\r\n            }\r\n        }\r\n        /**\r\n         * Represents a point.\r\n         * @constructor\r\n         * @param {array} position - position of the point.\r\n         */\r\n        // function Point(position) {\r\n        //     this.position = position;\r\n        //     this.gObject = function(color, size = 7, symbol=\"circle\") {\r\n        //         let pointObject = {\r\n        //             type: \"scatter3d\",\r\n        //             mode: \"markers\",\r\n        //             x: [this.position[0]],\r\n        //             y: [this.position[1]],\r\n        //             z: [this.position[2]],\r\n        //             marker: {\"color\": color, \"size\": size, \"symbol\": symbol}\r\n        //         }\r\n        //         return pointObject;\r\n        //     }\r\n        // }\r\n\r\n        /**\r\n         * Represents a cube with arrows pointing out on each side.\r\n         * @constructor\r\n         * @param {float} x - x position of the centre of the cube.\r\n         * @param {float} y - y position of the centre of the cube.\r\n         * @param {float} z - z position of the centre of the cube.\r\n         * @param {float} a - half length of the sides of the cube.\r\n         */\r\n        function outerCube(x,y,z,a) {\r\n            let cube = []\r\n            cube.push({\r\n                    type: \"mesh3d\",\r\n                    x: [x-a, x-a, x+a, x+a, x-a, x-a, x+a, x+a],\r\n                    y: [y-a, y+a, y+a, y-a, y-a, y+a, y+a, y-a],\r\n                    z: [z-a, z-a, z-a, z-a, z+a, z+a, z+a, z+a],\r\n                    i : [0, 0, 3, 4, 4, 4, 4, 4, 5, 6, 6, 7],\r\n                    j : [2, 3, 4, 3, 6, 7, 1, 5, 2, 2, 7, 3],\r\n                    k : [1, 2, 0, 7, 5, 6, 0, 1, 1, 5, 2, 2],\r\n                    opacity: 0.8,\r\n                    colorscale: [['0', orange], ['1', white]],\r\n                    intensity: [0, 0.1, 0.3, 0.5, 0.7, 0.8, 0.9, 1],\r\n                    showscale: false\r\n                }\r\n            )\r\n            let arr1 = new Line([[x+a,y,z],[x+a+1.5,y,z]])\r\n            let arr11 = new Line([[x+a-1,y,z],[x+a+1.5,y,z]])\r\n            let arr2 = new Line([[x-a,y,z],[x-a-1.5,y,z]])\r\n            let arr22 = new Line([[x-a+1,y,z],[x-a-1.5,y,z]])\r\n            let arr3 = new Line([[x,y+a,z],[x,y+a+1.5,z]])\r\n            let arr33 = new Line([[x,y+a-1,z],[x,y+a+1.5,z]])\r\n            let arr4 = new Line([[x,y-a,z],[x,y-a-1.5,z]])\r\n            let arr44 = new Line([[x,y-a+1,z],[x,y-a-1.5,z]])\r\n            let arr5 = new Line([[x,y,z+a],[x,y,z+a+1.5]])\r\n            let arr55 = new Line([[x,y,z+a-1],[x,y,z+a+1.5]])\r\n            let arr6 = new Line([[x,y,z-a],[x,y,z-a-1.5]])\r\n            let arr66 = new Line([[x,y,z-a+1],[x,y,z-a-1.5]])\r\n            cube.push(arr1.gObject(magenta,7))\r\n            cube.push(arr11.arrowHead(magenta,7))\r\n            cube.push(arr2.gObject(magenta,7))\r\n            cube.push(arr22.arrowHead(magenta,7))\r\n            cube.push(arr3.gObject(magenta,7))\r\n            cube.push(arr33.arrowHead(magenta,7))\r\n            cube.push(arr4.gObject(magenta,7))\r\n            cube.push(arr44.arrowHead(magenta,7))\r\n            cube.push(arr5.gObject(magenta,7))\r\n            cube.push(arr55.arrowHead(magenta,7))\r\n            cube.push(arr6.gObject(magenta,7))\r\n            cube.push(arr66.arrowHead(magenta,7))\r\n            return cube\r\n        }\r\n        /**\r\n         * Represents a cylinder.\r\n         * @constructor\r\n         * @param {float} radius - radius of the circular cross-section.\r\n         * @param {float} height - height of the cylinder.\r\n         */\r\n        // function Cylinder(radius, height){\r\n        //     this.radius = radius;\r\n        //     this.height = height;\r\n        //     let meshSize = radius * 10;\r\n        //     if (meshSize === 0) {meshSize = 2;}\r\n        //     let phi = numeric.linspace(0, 2*Math.PI, meshSize);\r\n        //     this.x = [], this.y = [], this.z = [];\r\n        //     let hValue = numeric.linspace(-height, height, meshSize);\r\n\r\n        //     let xTemp = [], yTemp = [], zTemp = [];\r\n        //     for(let i = 0; i < meshSize; ++i) {\r\n        //         xTemp.push(radius*Math.cos(phi[i]));\r\n        //         yTemp.push(radius*Math.sin(phi[i]));\r\n        //     }\r\n        //     for(let i = 0; i < meshSize; ++i) {\r\n        //         this.x.push(xTemp);\r\n        //         this.y.push(yTemp);\r\n        //         this.z.push(numeric.rep([meshSize], hValue[i]));\r\n        //     }\r\n\r\n        //     this.gObjectCurve = function(color1, color2) {\r\n        //         let curve = {\r\n        //             type: \"surface\",\r\n        //             x: this.x,\r\n        //             y: this.y,\r\n        //             z: this.z,\r\n        //             showscale: false,\r\n        //             opacity: 0.7,\r\n        //             colorscale: [[0.0, color1], [1.0, color2]]\r\n        //         }\r\n        //         return curve;\r\n        //     }\r\n        //     this.gObjectTop = function(color) {\r\n        //         let top = {\r\n        //             type: \"scatter3d\",\r\n        //             mode: \"lines\",\r\n        //             x: this.x[0],\r\n        //             y: this.y[0],\r\n        //             z: this.z[meshSize - 1],\r\n        //             line: {color: color.slice(0, -1) + \",0.2)\", width: 1},\r\n        //             surfaceaxis: 2,\r\n        //             opacity: 0.5\r\n        //         }\r\n        //         return top;\r\n        //     }\r\n        //     this.gObjectBottom = function(color) {\r\n        //         let bottom = {\r\n        //             type: \"scatter3d\",\r\n        //             mode: \"lines\",\r\n        //             x: this.x[0],\r\n        //             y: this.y[0],\r\n        //             z: this.z[0],\r\n        //             line: {color: color.slice(0, -1) + \",0.7)\", width: 1},\r\n        //             surfaceaxis: 2,\r\n        //             opacity: 0.7\r\n        //         }\r\n        //         return bottom;\r\n        //     }\r\n        // }\r\n\r\n        /**\r\n         * Represents a cuboid.\r\n         * @constructor\r\n         * @param {float} x - half length of cuboid in x-direction.\r\n         * @param {float} y - half length of cuboid in y-direction.\r\n         * @param {float} z - half length of cuboid in z-direction.\r\n         */\r\n        // function Cuboid(x, y, z){\r\n        //     this.width = x,\r\n        //     this.length = y,\r\n        //     this.height = z,\r\n        //     this.gObject = function(color) {\r\n        //         let cuboid = {\r\n        //             type: \"mesh3d\",\r\n        //             x: [-x, -x, x, x, -x, -x, x, x],\r\n        //             y: [-y, y, y, -y, -y, y, y, -y],\r\n        //             z: [0, 0, 0, 0, z, z, z, z],\r\n        //             i : [0, 0, 3, 4, 4, 4, 4, 4, 5, 6, 6, 7],\r\n        //             j : [2, 3, 4, 3, 6, 7, 1, 5, 2, 2, 7, 3],\r\n        //             k : [1, 2, 0, 7, 5, 6, 0, 1, 1, 5, 2, 2],\r\n        //             opacity: 0.5,\r\n        //             colorscale: [['0', color], ['1', \"rgb(255,255,255)\"]],\r\n        //             intensity: [0, 0.1, 0.3, 0.5, 0.7, 0.8, 0.9, 1],\r\n        //             showscale: false\r\n        //         }\r\n        //         return cuboid\r\n        //     }\r\n        // }\r\n\r\n        /**\r\n         * Represents a cuboid.\r\n         * @constructor\r\n         * @param {float} x - x position of the centre of the cube.\r\n         * @param {float} y - y position of the centre of the cube.\r\n         * @param {float} z - z position of the centre of the cube.\r\n         * @param {float} a - half length of cuboid in x-direction.\r\n         * @param {float} b - half length of cuboid in y-direction.\r\n         * @param {float} c - half length of cuboid in z-direction.\r\n         */\r\n        function Cube(x, y, z, a, b, c){\r\n\r\n            this.gObject = function(color1,color2, opacity) {\r\n                let cuboid = {\r\n                    type: \"mesh3d\",\r\n                    x: [x-a, x-a, x+a, x+a, x-a, x-a, x+a, x+a],\r\n                    y: [y-b, y+b, y+b, y-b, y-b, y+b, y+b, y-b],\r\n                    z: [z-c, z-c, z-c, z-c, z+c, z+c, z+c, z+c],\r\n                    i : [0, 0, 3, 4, 4, 4, 4, 4, 5, 6, 6, 7],\r\n                    j : [2, 3, 4, 3, 6, 7, 1, 5, 2, 2, 7, 3],\r\n                    k : [1, 2, 0, 7, 5, 6, 0, 1, 1, 5, 2, 2],\r\n                    opacity: opacity, // was 0.5\r\n                    colorscale: [['0', color1], ['1', color2]],\r\n                    intensity: [0, 0.1, 0.3, 0.5, 0.7, 0.8, 0.9, 1],\r\n                    showscale: false,\r\n                    // opacity: opacity\r\n                }\r\n                return cuboid\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Represents a 3d pringle shaped loop with an arrow pointing anticlockwise.\r\n        * @constructor\r\n        * @param {float} radius - radius of the loop.\r\n        * @param {array} centre - central point of the loop.\r\n        * @param {float} height - distance of the centre of the loop away from the z=0 plane\r\n        * @param {float} wave - number of periods of the sin wave on the loop, has to be even to close the loop smoothly, >= 2\r\n        */\r\n        // function Pringles(radius, center) {\r\n        //     this.radius = radius;\r\n        //     this.center = center;\r\n\r\n\r\n        //     this.gObject = function(color=black, width=7, dash=\"solid\", height=1, wave=4,opacity=0.5) {\r\n        //         let meshSize = 40; //multiple of 4!\r\n        //         let phi = numeric.linspace(0, 2*Math.PI, meshSize);\r\n        //         let theta = numeric.linspace(0,wave*Math.PI, meshSize);\r\n        //         let x = [], y = [], z = [];\r\n\r\n        //         for (let i=0, n=phi.length; i<n; ++i) {\r\n        //             x.push(this.radius*Math.cos(phi[i]) + this.center[0]);\r\n        //             y.push(this.radius*Math.sin(phi[i]) + this.center[1]);\r\n        //             z.push(height*(height*Math.sin(theta[i]) + this.center[2])+height);\r\n        //         }\r\n        //         let line2 = new Line([[x[0],y[0],z[0]],[x[7],y[7],z[7]]])\r\n        //         let lineObject = [{\r\n        //             type: \"scatter3d\",\r\n        //             mode: \"lines\",\r\n        //             x: x,\r\n        //             y: y,\r\n        //             z: z,\r\n        //             line: {color: color, width: width, dash:dash},\r\n        //             surfaceaxis: 2,\r\n        //             surfacecolor: green,\r\n        //             opacity: opacity\r\n        //             },\r\n        //             line2.arrowHead(magenta,5)\r\n        //         ]\r\n\r\n\r\n        //         return lineObject;\r\n        //     }\r\n\r\n        // }\r\n\r\n        /**\r\n        * Represents a hemisphere bounded by the pringle loop and an arrow pointing upwards.\r\n        * @constructor\r\n        * @param {float} radius - radius of the loop.\r\n        */\r\n\r\n        // function Sphere(radius) {\r\n        //     this.radius = radius;\r\n        //     this.gObject = function(color1,color2, width=7, dash=\"solid\",size, height=1, wave=4) {\r\n        //         let meshSize = 40;\r\n        //         let phi = numeric.linspace(0, 2*Math.PI, meshSize);\r\n        //         let theta= numeric.linspace(0, 0.5*Math.PI, meshSize);\r\n        //         let beta = numeric.linspace(0,wave*Math.PI, meshSize);\r\n\r\n        //         this.x = [], this.y = [], this.z = [];\r\n        //         for(let i = 0; i < meshSize; ++i) {\r\n        //             this.x[i] = [], this.y[i] = [], this.z[i] = [];\r\n        //             for(let j = 0; j < meshSize; ++j) {\r\n        //                 this.x[i].push(this.radius*Math.cos(phi[i])*Math.sin(theta[j])+1);\r\n        //                 this.y[i].push(this.radius*Math.sin(phi[i])*Math.sin(theta[j])+1);\r\n        //                 this.z[i].push((size* this.radius*Math.cos(theta[j])+height*(Math.sin(theta[j])*Math.sin(theta[j])*Math.sin(theta[j]))*(height*Math.sin(beta[i]) + 1)*(Math.sin(theta[j]))+height));\r\n        //             }\r\n        //         }\r\n        //         let x1 = 1;\r\n        //         let y1 = 1;\r\n        //         let z1 = height*(Math.sin(0.5*Math.PI)*Math.sin(0.5*Math.PI)*Math.sin(0.5*Math.PI))*(height*Math.sin(beta[0]) + 1)*(Math.sin(0.5*Math.PI));\r\n        //         let x2 = this.radius*Math.cos(phi[0])*Math.sin(theta[0])+1;\r\n        //         let y2 = this.radius*Math.sin(phi[0])*Math.sin(theta[0])+1;\r\n        //         let z2 =this.radius*Math.cos(theta[0])+(Math.sin(theta[0])*Math.sin(theta[0])*Math.sin(theta[0]))*(Math.sin(beta[0]) + 1)*(Math.sin(theta[0]))+6;\r\n        //         let line1 = new Line([[x1,y1,z1],[x2,y2,z2]])\r\n        //         let sphere = [{\r\n        //             type: \"surface\",\r\n        //             x: this.x,\r\n        //             y: this.y,\r\n        //             z: this.z,\r\n        //             showscale: false,\r\n        //             opacity: 0.6,\r\n        //             colorscale: [[0.0, color1], [1.0, color2]]\r\n        //         },\r\n        //         line1.gObject(black,3),\r\n        //         line1.arrowHead(magenta,5)\r\n        //         ]\r\n\r\n        //         return sphere;\r\n        //     }\r\n        // }\r\n\r\n        //2D Objects:\r\n        /**\r\n        * Represents a circle.\r\n        * @constructor\r\n        * @param {float} radius - radius of the circle.\r\n        */\r\n        // function Circle(radius) {\r\n        //     this.radius = radius;\r\n\r\n        //     this.gObject = function(color=cyan, centre=[0,0]) {\r\n        //         let phi = numeric.linspace(0, 2*Math.PI, 40);\r\n        //         let x = [], y = [];\r\n        //         for (let i=0, n=phi.length; i<n; ++i) {\r\n        //             x.push(this.radius*Math.cos(phi[i]) + centre[0]);\r\n        //             y.push(this.radius*Math.sin(phi[i]) + centre[1]);\r\n        //         }\r\n        //         let circle = {\r\n        //             type: \"scatter\",\r\n        //             mode: \"lines\",\r\n        //             x: x,\r\n        //             y: y,\r\n        //             line: {simplify: false, color: color},\r\n        //             fill:'toself',\r\n        //             opacity: 0.5\r\n        //         }\r\n        //         return circle;\r\n        //     }\r\n        // }\r\n\r\n        /**\r\n        * Represents a line.\r\n        * @constructor\r\n        * @param {list} points - list of the points in the line.\r\n        */\r\n        // function Line2d(points) {\r\n        //     this.x = [];\r\n        //     this.y = [];\r\n\r\n        //     for (let i = 0; i  < points.length; ++i) {\r\n        //         this.x.push(points[i][0]);\r\n        //         this.y.push(points[i][1]);\r\n        //     }\r\n\r\n        //     this.gObject = function(color, width=7, dash=\"solid\") {\r\n        //         let lineObject = {\r\n        //             type: \"scatter\",\r\n        //             mode: \"lines\",\r\n        //             x: this.x,\r\n        //             y: this.y,\r\n        //             line: {color: color, width: width, dash:dash}\r\n        //         }\r\n        //         return lineObject;\r\n        //     }\r\n\r\n        //     this.arrowHead = function(color, width=7, dash=\"solid\") {\r\n        //         let lastElm = this.x.length - 1;\r\n        //         let [rho, phi] = c2p(this.x[lastElm] - this.x[0], this.y[lastElm] - this.y[0]);\r\n        //         let offset = [this.x[0], this.y[0]];\r\n        //         let frac = 0.2*rho;\r\n        //         let sin45 = Math.sin(Math.PI/4);\r\n        //         let d = rho - frac * sin45;\r\n        //         let wingLength = Math.sqrt(Math.pow(frac*sin45,2) + d*d);\r\n        //         let wingAngle = Math.acos(d/wingLength);\r\n\r\n        //         let wings_xyz = [\r\n        //             math.add(p2c(wingLength, phi + wingAngle), offset),\r\n        //             math.add(p2c(wingLength, phi - wingAngle), offset)\r\n        //         ];\r\n\r\n        //         let wings = {\r\n        //             type: \"scatter\",\r\n        //             mode: \"lines\",\r\n        //             x: [wings_xyz[0][0], this.x[lastElm], wings_xyz[1][0]],\r\n        //             y: [wings_xyz[0][1], this.y[lastElm], wings_xyz[1][1]],\r\n        //             line: {color: color, width: width}\r\n        //         }\r\n\r\n        //         return wings;\r\n        //     }\r\n        // }\r\n\r\n        let layout = {\r\n            width: 450, height: 500,\r\n            margin: {l:0, r:0, t:0, b:0},\r\n            hovermode: \"closest\",\r\n            showlegend: false,\r\n            scene: {\r\n                camera: createView([1,1,1]),\r\n                xaxis: {range: [-2.8, 3.2], zeroline: true, autorange: false,},\r\n                yaxis: {range: [-2.8, 3.2], zeroline: true, autorange: false,},\r\n                zaxis: {range: [-2.8, 3.2], zeroline: true, autorange: false,},\r\n                aspectratio: {x:1, y:1, z:1},\r\n            }\r\n        };\r\n\r\n        // let isBlackText = false;\r\n        // let blackTextType = \"lines\";\r\n\r\n        //create small cubes with arrow pointing out on each side.\r\n        //by defining the position of the cube, the position of the arrows are set such that the arrows on two neighbour side of two cubes won't overlap each other\r\n        //by set innerArr = fault, the arrow can be removed\r\n\r\n        function cubeAndArrow(x,y,z,color,color1,innerArr1 = true,innerArr2 = true,innerArr3 = true,innerArr4 = true,innerArr5 = true,innerArr6 = true){\r\n            let Cubes = []\r\n            let cube = new Cube(x,y,z,0.5,0.5,0.5);\r\n            Cubes.push(cube.gObject(color1, white , 0.8));\r\n\r\n            if (innerArr1){\r\n                if (x>0){\r\n                    let arr1 = new Line([[x-0.5,y+0.2,z],[x-1,y+0.2,z]]);\r\n                    let arr11 = new Line([[x+0.5,y+0.2,z],[x-1,y+0.2,z]]);\r\n                    Cubes.push(arr1.gObject(color, 3));\r\n                    Cubes.push(arr11.arrowHead(color,3));\r\n                }else{\r\n                    let arr1 = new Line([[x-0.5,y,z],[x-1,y,z]]);\r\n                    let arr11 = new Line([[x+0.5,y,z],[x-1,y,z]]);\r\n                    Cubes.push(arr1.gObject(color, 3));\r\n                    Cubes.push(arr11.arrowHead(color,3));\r\n                }\r\n            }else{\r\n                let arr1 = new Line([[0,0,0],[0,0,0]]);\r\n                let arr11 = new Line([[0,0,0],[0,0,0]]);\r\n                Cubes.push(arr1.gObject(color, 0));\r\n                Cubes.push(arr11.arrowHead(color,0));\r\n            }\r\n\r\n            if (innerArr2){\r\n                if (x<0){\r\n                    let arr2 = new Line([[x+0.5,y+0.2,z],[x+1,y+0.2,z]]);\r\n                    let arr22 = new Line([[x-0.5,y+0.2,z],[x+1,y+0.2,z]]);\r\n                    Cubes.push(arr2.gObject(color, 3));\r\n                    Cubes.push(arr22.arrowHead(color,3));\r\n                }else{\r\n                    let arr2 = new Line([[x+0.5,y,z],[x+1,y,z]]);\r\n                    let arr22 = new Line([[x-0.5,y,z],[x+1,y,z]]);\r\n                    Cubes.push(arr2.gObject(color, 3));\r\n                    Cubes.push(arr22.arrowHead(color,3));\r\n                }\r\n            }else{\r\n                let arr2 = new Line([[0,0,0],[0,0,0]]);\r\n                let arr22 = new Line([[0,0,0],[0,0,0]]);\r\n                Cubes.push(arr2.gObject(color, 0));\r\n                Cubes.push(arr22.arrowHead(color,0));\r\n            }\r\n\r\n            if (innerArr3){\r\n                if (y>0){\r\n                    let arr3 = new Line([[x,y-0.5,z+0.2],[x,y-1,z+0.2]]);\r\n                    let arr33 = new Line([[x,y+0.5,z+0.2],[x,y-1,z+0.2]]);\r\n                    Cubes.push(arr3.gObject(color, 3));\r\n                    Cubes.push(arr33.arrowHead(color,3));\r\n                }else{\r\n                    let arr3 = new Line([[x,y-0.5,z],[x,y-1,z]]);\r\n                    let arr33 = new Line([[x,y+0.5,z],[x,y-1,z]]);\r\n                    Cubes.push(arr3.gObject(color, 3));\r\n                    Cubes.push(arr33.arrowHead(color,3));\r\n                }\r\n            }else{\r\n                let arr3 = new Line([[0,0,0],[0,0,0]]);\r\n                let arr33 = new Line([[0,0,0],[0,0,0]]);\r\n                Cubes.push(arr3.gObject(color, 0));\r\n                Cubes.push(arr33.arrowHead(color,0));\r\n            }\r\n\r\n            if (innerArr4){\r\n                if (y<0){\r\n                    let arr4 = new Line([[x,y+0.5,z+0.2],[x,y+1,z+0.2]]);\r\n                    let arr44 = new Line([[x,y-0.5,z+0.2],[x,y+1,z+0.2]]);\r\n                    Cubes.push(arr4.gObject(color, 3));\r\n                    Cubes.push(arr44.arrowHead(color,3));\r\n                }else{\r\n                    let arr4 = new Line([[x,y+0.5,z],[x,y+1,z]]);\r\n                    let arr44 = new Line([[x,y-0.5,z],[x,y+1,z]]);\r\n                    Cubes.push(arr4.gObject(color, 3));\r\n                    Cubes.push(arr44.arrowHead(color,3));\r\n                }\r\n            }else{\r\n                let arr4 = new Line([[0,0,0],[0,0,0]]);\r\n                let arr44 = new Line([[0,0,0],[0,0,0]]);\r\n                Cubes.push(arr4.gObject(color, 0));\r\n                Cubes.push(arr44.arrowHead(color,0));\r\n            }\r\n\r\n            if (innerArr5){\r\n                if (z>0){\r\n                    let arr5 = new Line([[x+0.2,y,z-0.5],[x+0.2,y,z-1]]);\r\n                    let arr55 = new Line([[x+0.2,y,z+0.5],[x+0.2,y,z-1]]);\r\n                    Cubes.push(arr5.gObject(color, 3));\r\n                    Cubes.push(arr55.arrowHead(color,3));\r\n                }else{\r\n                    let arr5 = new Line([[x,y,z-0.5],[x,y,z-1]]);\r\n                    let arr55 = new Line([[x,y,z+0.5],[x,y,z-1]]);\r\n                    Cubes.push(arr5.gObject(color, 3));\r\n                    Cubes.push(arr55.arrowHead(color,3));\r\n                }\r\n            }else{\r\n                let arr5 = new Line([[0,0,0],[0,0,0]]);\r\n                let arr55 = new Line([[0,0,0],[0,0,0]]);\r\n                Cubes.push(arr5.gObject(color, 0));\r\n                Cubes.push(arr55.arrowHead(color,0));\r\n            }\r\n\r\n\r\n            if (innerArr6){\r\n                if (z<0){\r\n                    let arr6 = new Line([[x+0.2,y,z+0.5],[x+0.2,y,z+1]]);\r\n                    let arr66 = new Line([[x+0.2,y,z-0.5],[x+0.2,y,z+1]]);\r\n                    Cubes.push(arr6.gObject(color, 3));\r\n                    Cubes.push(arr66.arrowHead(color,3));\r\n                }else{\r\n                    let arr6 = new Line([[x,y,z+0.5],[x,y,z+1]]);\r\n                    let arr66 = new Line([[x,y,z-0.5],[x,y,z+1]]);\r\n                    Cubes.push(arr6.gObject(color, 3));\r\n                    Cubes.push(arr66.arrowHead(color,3));\r\n                }\r\n            }else{\r\n                let arr6 = new Line([[0,0,0],[0,0,0]]);\r\n                let arr66 = new Line([[0,0,0],[0,0,0]]);\r\n                Cubes.push(arr6.gObject(color, 0));\r\n                Cubes.push(arr66.arrowHead(color,0));\r\n            }\r\n\r\n            return Cubes;\r\n        }\r\n\r\n        //create a blank object to added in frames so that some frames won't be shorter than the others\r\n        function blank(data1, number){\r\n            let data2 = []\r\n            for (let i=0; i<number; ++i){\r\n                data2.push({\r\n                    type: \"scatter3d\",\r\n                    mode: \"lines\",\r\n                    x:[0,0],\r\n                    y:[0,0],\r\n                    z:[0,0],\r\n                    lines: {width:0}\r\n                })\r\n            }\r\n            data2 = data1.concat(data2)\r\n            return data2;\r\n        }\r\n\r\n        //represents a 3d square with each side being highlighted\r\n        function Surface3d(a1,b1,c1,a2,b2,c2,a3,b3,c3,a4,b4,c4){\r\n            let edge1 = new Line([[a1,b1,c1],[a2,b2,c2]])\r\n            let edge2 = new Line([[a2,b2,c2],[a3,b3,c3]])\r\n            let edge3 = new Line([[a3,b3,c3],[a4,b4,c4]])\r\n            let edge4 = new Line([[a4,b4,c4],[a1,b1,c1]])\r\n            let square = [\r\n            edge1.gObject(red,5),\r\n            edge2.gObject(red,5),\r\n            edge3.gObject(red,5),\r\n            edge4.gObject(red,5),\r\n            {\r\n                    type: \"mesh3d\",\r\n                    x: [a1,a2,a3,a4],\r\n                    y: [b1,b2,b3,b4],\r\n                    z: [c1,c2,c3,c4],\r\n                    i : [0, 0],\r\n                    j : [2, 3],\r\n                    k : [1, 2],\r\n                    opacity: 0.8,\r\n                    colorscale: [['0', impBlue], ['1', impBlue]],\r\n                    intensity: [0.8,0.8],\r\n                    showscale: false\r\n            }\r\n            ]\r\n            return square;\r\n        }\r\n\r\n        //creating frames for the animation\r\n        function getCubes(frames){\r\n            //create stops for the animation\r\n            let stops = [0];\r\n            let sep = numeric.linspace(0,0.5,20)\r\n\r\n            //first frame -- a big cube with six arrows\r\n            let bigCube = new outerCube(0.5,0.5,0.5,1)\r\n            let data = new blank(bigCube, 200)\r\n            frames.push({data: data});\r\n\r\n            //second stage -- cutting the big cube to 8 same sized cubes\r\n            for (let i = 0; i < 20; ++i){\r\n                let Cube1 = new cubeAndArrow(0,0,0,black,green)\r\n                let Cube2 = new cubeAndArrow(1+sep[i],0,0,black,green)\r\n                Cube2 = Cube1.concat(Cube2)\r\n                let Cube3 = new cubeAndArrow(0,1+sep[i],0,black, green)\r\n                Cube3 = Cube2.concat(Cube3)\r\n                let Cube4 = new cubeAndArrow(1+sep[i],1+sep[i],0,black,green)\r\n                Cube4 = Cube3.concat(Cube4)\r\n                let Cube5 = new cubeAndArrow(0,0,1+sep[i],black, green)\r\n                Cube5 = Cube4.concat(Cube5)\r\n                let Cube6 = new cubeAndArrow(1+sep[i],0,1+sep[i], black, green)\r\n                Cube6 = Cube5.concat(Cube6)\r\n                let Cube7 = new cubeAndArrow(0,1+sep[i],1+sep[i], black, green)\r\n                Cube7 = Cube6.concat(Cube7)\r\n                let Cube8 = new cubeAndArrow(1+sep[i],1+sep[i],1+sep[i],black, green)\r\n                Cube8 = Cube7.concat(Cube8)\r\n                let data = new blank(Cube8, 200)\r\n                frames.push({data: data});\r\n            }\r\n            //make the animation stops itself after the second stage\r\n            stops.push(frames.length - 1);\r\n\r\n            //third stage -- starting from one small cube, adding one small cube each time, highlight the interface\r\n            //make the arrows in between disappear and make the resulting cube change color\r\n\r\n            //one cube\r\n            let Cube1 = new cubeAndArrow(0,0,0,black,green)\r\n            data = new blank(Cube1, 164)\r\n            frames.push({data: data});\r\n\r\n\r\n            //two cubes\r\n            for (let i =0; i<22; ++i){\r\n                if (i < 19){\r\n                    let Cube2 = new cubeAndArrow(1.5-sep[i],0,0,lilac,green)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let data = new blank(Cube2, 151)\r\n                    frames.push({data: data});\r\n                }else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false)\r\n                    let Cube22 = new cubeAndArrow(1,0,0,black,orange,false)\r\n                    let square = new Surface3d(0.51,-0.51,-0.51,0.51,0.51,-0.51,0.51,0.51,0.51,0.51,-0.51,0.51)\r\n                    Cube22 = Cube1.concat(Cube22)\r\n                    Cube22 = Cube22.concat(square)\r\n                    let data = new blank(Cube22, 146)\r\n                    frames.push({data: data});\r\n                }\r\n            }\r\n\r\n            //three cubes\r\n            for (let i =0; i<22; ++i){\r\n                if (i < 19){\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false)\r\n                    let Cube22 = new cubeAndArrow(1,0,0,black,orange,false)\r\n                    Cube22 = Cube1.concat(Cube22)\r\n                    let Cube3 = new cubeAndArrow(0,1.5-sep[i],0,lilac, green)\r\n                    Cube3 = Cube22.concat(Cube3)\r\n                    let data = new blank(Cube3, 133)\r\n                    frames.push({data: data});\r\n                } else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube33= new cubeAndArrow(0,1,0,black,orange,true,true,false)\r\n                    let square = new Surface3d(-0.51,0.51,0.51,0.51,0.51,0.51,0.51,0.51,-0.51,-0.51,0.51,-0.51)\r\n                    Cube33 = Cube2.concat(Cube33)\r\n                    Cube33 = Cube33.concat(square)\r\n                    let data = new blank(Cube33, 128)\r\n                    frames.push({data: data});\r\n                }\r\n\r\n            }\r\n\r\n            //four cubes\r\n            for (let i =0; i<22; ++i){\r\n                if (i < 19){\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube33= new cubeAndArrow(0,1,0,black,orange,true,true,false)\r\n                    Cube33 = Cube2.concat(Cube33)\r\n                    let Cube4 = new cubeAndArrow(1.5-sep[i],1.5-sep[i],0,lilac,green)\r\n                    Cube4 = Cube33.concat(Cube4)\r\n                    let data = new blank(Cube4, 115)\r\n                    frames.push({data: data});\r\n                }else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube44 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    let square1 = new Surface3d(0.51,0.51,0.51,1.51,0.51,0.51,1.51,0.51,-0.51,0.51,0.51,-0.51)\r\n                    let square2 = new Surface3d(0.51,0.51,0.51,0.51,1.51,0.51,0.51,1.51,-0.51,0.51,0.51,-0.51)\r\n                    Cube44 = Cube3.concat(Cube44)\r\n                    Cube44 = Cube44.concat(square1)\r\n                    Cube44 = Cube44.concat(square2)\r\n                    let data = new blank(Cube44, 105)\r\n                    frames.push({data: data});\r\n                }\r\n            }\r\n\r\n\r\n            //five cubes\r\n            for (let i =0; i<22; ++i){\r\n                if (i<19){\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube44 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube44 = Cube3.concat(Cube44)\r\n                    let Cube5 = new cubeAndArrow(0,0,1.5-sep[i],lilac, green)\r\n                    Cube5 = Cube44.concat(Cube5)\r\n                    let data = new blank(Cube5, 92)\r\n                    frames.push({data: data});\r\n                }else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube55 = new cubeAndArrow(0,0,1,black, orange,true,true,true,true,false)\r\n                    let square = new Surface3d(0.51,-0.51,0.51,0.51,0.51,0.51,-0.51,0.51,0.51,-0.51,-0.51,0.51)\r\n                    Cube55 = Cube4.concat(Cube55)\r\n                    Cube55= Cube55.concat(square)\r\n                    let data = new blank(Cube55, 87)\r\n                    frames.push({data: data});\r\n                }\r\n\r\n            }\r\n\r\n\r\n            //six cubes\r\n            for (let i =0; i<22; ++i){\r\n                if (i<19){\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube55 = new cubeAndArrow(0,0,1,black, orange,true,true,true,true,false)\r\n                    Cube55 = Cube4.concat(Cube55)\r\n                    let Cube6 = new cubeAndArrow(1.5-sep[i],0,1.5-sep[i], lilac, green)\r\n                    Cube6 = Cube55.concat(Cube6)\r\n                    let data = new blank(Cube6, 74)\r\n                    frames.push({data: data});\r\n                }else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube5 = new cubeAndArrow(0,0,1,black, orange,true,false,true,true,false)\r\n                    Cube5 = Cube4.concat(Cube5)\r\n                    let Cube66 = new cubeAndArrow(1,0,1,black,orange,false,true,true,true,false)\r\n                    let square1 = new Surface3d(0.51,0.51,0.51,0.51,-0.51,0.51,0.51,-0.51,1.51,0.51,0.51,1.51)\r\n                    let square2 = new Surface3d(0.51,0.51,0.51,0.51,-0.51,0.51,1.51,-0.51,0.51,1.51,0.51,0.51)\r\n                    Cube66 = Cube5.concat(Cube66)\r\n                    Cube66 = Cube66.concat(square1)\r\n                    Cube66 = Cube66.concat(square2)\r\n                    let data = new blank(Cube66, 64)\r\n                    frames.push({data: data});\r\n                }\r\n\r\n            }\r\n\r\n\r\n            //seven cubes\r\n            for (let i =0; i<22; ++i){\r\n                if(i<19){\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube5 = new cubeAndArrow(0,0,1,black, orange,true,false,true,true,false)\r\n                    Cube5 = Cube4.concat(Cube5)\r\n                    let Cube66 = new cubeAndArrow(1,0,1,black,orange,false,true,true,true,false)\r\n                    Cube66 = Cube5.concat(Cube66)\r\n                    let Cube7 = new cubeAndArrow(0,1.5-sep[i],1.5-sep[i],lilac, green)\r\n                    Cube7 = Cube66.concat(Cube7)\r\n                    let data = new blank(Cube7, 51)\r\n                    frames.push({data: data});\r\n                }else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false,true,true,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube5 = new cubeAndArrow(0,0,1,black, orange,true,false,true,false,false)\r\n                    Cube5 = Cube4.concat(Cube5)\r\n                    let Cube6 = new cubeAndArrow(1,0,1,black,orange,false,true,true,true,false)\r\n                    Cube6 = Cube5.concat(Cube6)\r\n                    let Cube77 = new cubeAndArrow(0,1,1,black,orange,true,true,false,true,false)\r\n                    let square1 = new Surface3d(0.51,0.51,0.51,-0.51,0.51,0.51,-0.51,0.51,1.51,0.51,0.51,1.51)\r\n                    let square2 = new Surface3d(0.51,0.51,0.51,0.51,1.51,0.51,-0.51,1.51,0.51,-0.51,0.51,0.51)\r\n                    Cube77 = Cube6.concat(Cube77)\r\n                    Cube77 = Cube77.concat(square1)\r\n                    Cube77 = Cube77.concat(square2)\r\n                    let data = new blank(Cube77, 41)\r\n                    frames.push({data: data});\r\n                }\r\n            }\r\n\r\n\r\n            //eight cubes\r\n            for (let i =0; i<22; ++i){\r\n                if (i<19){\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false,true,true,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube5 = new cubeAndArrow(0,0,1,black, orange,true,false,true,false,false)\r\n                    Cube5 = Cube4.concat(Cube5)\r\n                    let Cube6 = new cubeAndArrow(1,0,1,black,orange,false,true,true,true,false)\r\n                    Cube6 = Cube5.concat(Cube6)\r\n                    let Cube77 = new cubeAndArrow(0,1,1,black,orange,true,true,false,true,false)\r\n                    Cube77 = Cube6.concat(Cube77)\r\n                    let Cube8 = new cubeAndArrow(1.5-sep[i],1.5-sep[i],1.5-sep[i],lilac, green)\r\n                    Cube8 = Cube77.concat(Cube8)\r\n                    let data = new blank(Cube8, 28)\r\n                    frames.push({data: data});\r\n                }else{\r\n                    let Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n                    let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false,true,false)\r\n                    Cube2 = Cube1.concat(Cube2)\r\n                    let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false,true,true,false)\r\n                    Cube3 = Cube2.concat(Cube3)\r\n                    let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false,true,true,false)\r\n                    Cube4 = Cube3.concat(Cube4)\r\n                    let Cube5 = new cubeAndArrow(0,0,1,black, orange,true,false,true,false,false)\r\n                    Cube5 = Cube4.concat(Cube5)\r\n                    let Cube6 = new cubeAndArrow(1,0,1,black,orange,false,true,true,false,false)\r\n                    Cube6 = Cube5.concat(Cube6)\r\n                    let Cube7 = new cubeAndArrow(0,1,1,black,orange,true,false,false,true,false)\r\n                    Cube7 = Cube6.concat(Cube7)\r\n                    let Cube88 = new cubeAndArrow(1,1,1,black,orange,false,true,false,true,false)\r\n                    let square1 = new Surface3d(0.51,0.51,0.51,0.51,0.51,1.51,0.51,1.51,1.51,0.51,1.51,0.51)\r\n                    let square2 = new Surface3d(0.51,0.51,0.51,1.51,0.51,0.51,1.51,1.51,0.51,0.51,1.51,0.51)\r\n                    let square3 = new Surface3d(0.51,0.51,0.51,1.51,0.51,0.51,1.51,0.51,1.51,0.51,0.51,1.51)\r\n                    Cube88 = Cube7.concat(Cube88)\r\n                    Cube88 = Cube88.concat(square1)\r\n                    Cube88 = Cube88.concat(square2)\r\n                    Cube88 = Cube88.concat(square3)\r\n                    let data = new blank(Cube88, 30)\r\n                    frames.push({data: data});\r\n                }\r\n            }\r\n\r\n\r\n            //fourth stage -- after adding all eight cubes back, add the big cube on the outside\r\n            Cube1 = new cubeAndArrow(0,0,0,black,orange,true,false,true,false,true,false)\r\n            let Cube2 = new cubeAndArrow(1,0,0,black,orange,false,true,true,false,true,false)\r\n            Cube2 = Cube1.concat(Cube2)\r\n            let Cube3 = new cubeAndArrow(0,1,0,black,orange,true,false,false,true,true,false)\r\n            Cube3 = Cube2.concat(Cube3)\r\n            let Cube4 = new cubeAndArrow(1,1,0,black,orange,false,true,false,true,true,false)\r\n            Cube4 = Cube3.concat(Cube4)\r\n            let Cube5 = new cubeAndArrow(0,0,1,black, orange,true,false,true,false,false)\r\n            Cube5 = Cube4.concat(Cube5)\r\n            let Cube6 = new cubeAndArrow(1,0,1,black,orange,false,true,true,false,false)\r\n            Cube6 = Cube5.concat(Cube6)\r\n            let Cube7 = new cubeAndArrow(0,1,1,black,orange,true,false,false,true,false)\r\n            Cube7 = Cube6.concat(Cube7)\r\n            let Cube8 = new cubeAndArrow(1,1,1,black,orange,false,true,false,true,false)\r\n            Cube8 = Cube7.concat(Cube8)\r\n            let Cube9 = new outerCube(0.5,0.5,0.5,1)\r\n            Cube9 = Cube9.concat(Cube8)\r\n            data = new blank(Cube9, 100)\r\n            frames.push({data: data});\r\n\r\n            //return the array that represents stops\r\n            return stops\r\n        }\r\n\r\n        //plots\r\n        function initPlot(){\r\n            // console.log(\"initPlot called\");\r\n            Plotly.purge(\"graph\");\r\n            let frames = [],\r\n\r\n            //load frames and stops\r\n            stops = getCubes(frames);\r\n\r\n            //the slider for each frame\r\n            $(\"#animateSlider\").attr(\"max\", frames.length - 1);\r\n            //load animation\r\n            initAnimation(\"animate\", frames, [], layout, 10, stops, true);\r\n            return;\r\n        }\r\n\r\n        //load main\r\n        function main() {\r\n            //slider\r\n            $(\"input[type=range]\").each(function () {\r\n                $(this).on('input', function(){\r\n                    $(\"#\"+$(this).attr(\"id\") + \"Display\").text( $(this).val() + $(\"#\"+$(this).attr(\"id\") + \"Display\").attr(\"data-unit\") );\r\n                    historyPlot(parseFloat($(this).val()));\r\n                });\r\n            });\r\n\r\n            //animation\r\n            // $(\"input[type=submit]\").click(function () {\r\n            //     // let idName = $(this).attr(\"id\");\r\n            //     startAnimation();\r\n            // });\r\n            if (v.frameNo == -1) {\r\n                startAnimation();\r\n            }\r\n            \r\n            initPlot();\r\n            // startAnimation();\r\n        }\r\n\r\n        function redraw() {\r\n            requestAnimationFrame(redraw);\r\n            \r\n            if (v.redrawPlot) {\r\n                historyPlot(v.frameNo);\r\n                v.redrawPlot = false;\r\n            }\r\n        }\r\n        \r\n        main();\r\n        redraw();\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.center{\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n}\r\n.in-line-eqn {\r\n    margin-top: -25px;\r\n    margin-bottom: -25px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Divergence.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Divergence.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Divergence.vue?vue&type=template&id=fd49cb9a&\"\nimport script from \"./Divergence.vue?vue&type=script&lang=js&\"\nexport * from \"./Divergence.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Divergence.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport ImpVis from '@impvis/components'\nimport '@impvis/components/dist/impvis-components.css'\nimport divergence from './Divergence.vue'\nimport ImpVisKatex from \"@impvis/components-katex\"\n\nVue.config.productionTip = false\nVue.use(ImpVis);\nVue.use(ImpVisKatex)\n\n\n\n\nnew Vue({\n    render: h => h(divergence),\n  }).$mount('#app')\n  "],"sourceRoot":""}